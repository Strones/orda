"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const path_1 = require("path");
const chalk_1 = tslib_1.__importDefault(require("chalk"));
const dateformat_1 = tslib_1.__importDefault(require("dateformat"));
var DiagnosticCategory;
(function (DiagnosticCategory) {
    DiagnosticCategory[DiagnosticCategory["Warning"] = 0] = "Warning";
    DiagnosticCategory[DiagnosticCategory["Error"] = 1] = "Error";
    DiagnosticCategory[DiagnosticCategory["Suggestion"] = 2] = "Suggestion";
    DiagnosticCategory[DiagnosticCategory["Message"] = 3] = "Message";
})(DiagnosticCategory = exports.DiagnosticCategory || (exports.DiagnosticCategory = {}));
const consoleColors = {
    [DiagnosticCategory.Warning]: chalk_1.default.keyword('orange'),
    [DiagnosticCategory.Error]: chalk_1.default.red,
    [DiagnosticCategory.Message]: chalk_1.default,
    [DiagnosticCategory.Suggestion]: chalk_1.default,
};
const categoryNames = {
    [DiagnosticCategory.Warning]: 'warn',
    [DiagnosticCategory.Error]: 'error',
    [DiagnosticCategory.Message]: 'info',
    [DiagnosticCategory.Suggestion]: 'suggestion',
};
exports.logDiagnosticToConsole = (diagnostic) => {
    const { category, messageText } = diagnostic;
    let filePosition = '';
    if (diagnostic.file) {
        const { path, position } = diagnostic.file;
        filePosition += ` ${path_1.relative(process.cwd(), path)}`;
        if (position)
            filePosition += `:${position.start.line},${position.start.character}`;
    }
    const now = new Date();
    const timestamp = dateformat_1.default(now, 'HH:MM:ss');
    const colorizer = consoleColors[category];
    const message = typeof messageText === 'string' ?
        messageText : messageText.map(msg => msg.messageText).join('\n');
    console.log(colorizer(`[${timestamp}][${categoryNames[category]}]${filePosition} ${message}`));
};
