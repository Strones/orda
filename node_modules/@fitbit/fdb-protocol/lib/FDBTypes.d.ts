import * as t from 'io-ts';
export declare enum ErrorCodes {
    HostNotInitialized = -32001,
    MessageTooLong = -32002,
    ResponseTooLong = -32003,
    RequestError = -1,
}
export declare const NonNegativeInteger: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
export declare const PositiveInteger: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
export declare const ObjectURI: t.StringType;
export declare type ObjectURI = t.TypeOf<typeof ObjectURI>;
export declare const AppFileURI: t.RefinementType<t.StringType, string, string, t.mixed>;
export declare type AppFileURI = t.TypeOf<typeof AppFileURI>;
export declare const Timestamp: t.NumberType;
export declare type Timestamp = t.TypeOf<typeof Timestamp>;
export declare const Semver: t.Type<string, string, t.mixed>;
export declare type Semver = t.TypeOf<typeof Semver>;
export declare const ReleaseSemver: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
export declare type ReleaseSemver = t.TypeOf<typeof ReleaseSemver>;
export declare const Position: t.IntersectionType<[t.InterfaceType<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }, t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }>, t.mixed>, t.PartialType<{
        generated: t.BooleanType;
        name: t.StringType;
    }, t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.mixed>], t.TypeOfProps<{
    source: t.RefinementType<t.StringType, string, string, t.mixed>;
    line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
}> & t.TypeOfPartialProps<{
    generated: t.BooleanType;
    name: t.StringType;
}>, t.OutputOfProps<{
    source: t.RefinementType<t.StringType, string, string, t.mixed>;
    line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
}> & t.OutputOfPartialProps<{
    generated: t.BooleanType;
    name: t.StringType;
}>, t.mixed>;
export declare type Position = t.TypeOf<typeof Position>;
export declare const UUID: t.RefinementType<t.StringType, string, string, t.mixed>;
export declare type UUID = t.TypeOf<typeof UUID>;
export declare const BuildID: t.RefinementType<t.StringType, string, string, t.mixed>;
export declare type BuildID = t.TypeOf<typeof BuildID>;
export declare const App: t.InterfaceType<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
}, t.TypeOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
}>, t.OutputOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
}>, t.mixed>;
export declare type App = t.TypeOf<typeof App>;
export declare const Component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
export declare type Component = t.TypeOf<typeof Component>;
export declare const AppComponent: t.IntersectionType<[t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }>, t.mixed>, t.InterfaceType<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }, t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>, t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>, t.mixed>], t.TypeOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
}> & t.TypeOfProps<{
    component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
}>, t.OutputOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
}> & t.OutputOfProps<{
    component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
}>, t.mixed>;
export declare type AppComponent = t.TypeOf<typeof AppComponent>;
export declare const DeviceHost: t.PartialType<{
    hostID: t.StringType;
}, t.TypeOfPartialProps<{
    hostID: t.StringType;
}>, t.OutputOfPartialProps<{
    hostID: t.StringType;
}>, t.mixed>;
export declare type DeviceHost = t.TypeOf<typeof DeviceHost>;
export declare const InstalledApp: t.UnionType<(t.InterfaceType<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
}, t.TypeOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
}>, t.OutputOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
}>, t.mixed> | t.PartialType<{
    hostID: t.StringType;
}, t.TypeOfPartialProps<{
    hostID: t.StringType;
}>, t.OutputOfPartialProps<{
    hostID: t.StringType;
}>, t.mixed>)[], t.TypeOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
}> | t.TypeOfPartialProps<{
    hostID: t.StringType;
}>, t.OutputOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
}> | t.OutputOfPartialProps<{
    hostID: t.StringType;
}>, t.mixed>;
export declare type InstalledApp = t.TypeOf<typeof InstalledApp>;
export declare const InstalledAppComponent: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }>, t.mixed>, t.InterfaceType<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }, t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>, t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>, t.mixed>], t.TypeOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
}> & t.TypeOfProps<{
    component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
}>, t.OutputOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
}> & t.OutputOfProps<{
    component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
}>, t.mixed> | t.PartialType<{
    hostID: t.StringType;
}, t.TypeOfPartialProps<{
    hostID: t.StringType;
}>, t.OutputOfPartialProps<{
    hostID: t.StringType;
}>, t.mixed>)[], (t.TypeOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
}> & t.TypeOfProps<{
    component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
}>) | t.TypeOfPartialProps<{
    hostID: t.StringType;
}>, (t.OutputOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
}> & t.OutputOfProps<{
    component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
}>) | t.OutputOfPartialProps<{
    hostID: t.StringType;
}>, t.mixed>;
export declare type InstalledAppComponent = t.TypeOf<typeof InstalledAppComponent>;
export declare const ProtocolCapabilities: t.PartialType<{
    batchRequest: t.BooleanType;
    maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
}, t.TypeOfPartialProps<{
    batchRequest: t.BooleanType;
    maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
}>, t.OutputOfPartialProps<{
    batchRequest: t.BooleanType;
    maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
}>, t.mixed>;
export declare type ProtocolCapabilities = t.TypeOf<typeof ProtocolCapabilities>;
export declare const IOCapabilities: t.PartialType<{
    write: t.BooleanType;
    additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
}, t.TypeOfPartialProps<{
    write: t.BooleanType;
    additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
}>, t.OutputOfPartialProps<{
    write: t.BooleanType;
    additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
}>, t.mixed>;
export declare type IOCapabilities = t.TypeOf<typeof IOCapabilities>;
export declare const ConsoleDebuggerCapabilities: t.PartialType<{
    appLogging: t.BooleanType;
}, t.TypeOfPartialProps<{
    appLogging: t.BooleanType;
}>, t.OutputOfPartialProps<{
    appLogging: t.BooleanType;
}>, t.mixed>;
export declare type ConsoleDebuggerCapabilities = t.TypeOf<typeof ConsoleDebuggerCapabilities>;
export declare const DebuggerCapabilities: t.PartialType<{
    protocol: t.PartialType<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }, t.TypeOfPartialProps<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }>, t.OutputOfPartialProps<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }>, t.mixed>;
    io: t.PartialType<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }, t.TypeOfPartialProps<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.OutputOfPartialProps<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.mixed>;
    console: t.PartialType<{
        appLogging: t.BooleanType;
    }, t.TypeOfPartialProps<{
        appLogging: t.BooleanType;
    }>, t.OutputOfPartialProps<{
        appLogging: t.BooleanType;
    }>, t.mixed>;
    experimental: t.AnyType;
}, t.TypeOfPartialProps<{
    protocol: t.PartialType<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }, t.TypeOfPartialProps<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }>, t.OutputOfPartialProps<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }>, t.mixed>;
    io: t.PartialType<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }, t.TypeOfPartialProps<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.OutputOfPartialProps<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.mixed>;
    console: t.PartialType<{
        appLogging: t.BooleanType;
    }, t.TypeOfPartialProps<{
        appLogging: t.BooleanType;
    }>, t.OutputOfPartialProps<{
        appLogging: t.BooleanType;
    }>, t.mixed>;
    experimental: t.AnyType;
}>, t.OutputOfPartialProps<{
    protocol: t.PartialType<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }, t.TypeOfPartialProps<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }>, t.OutputOfPartialProps<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }>, t.mixed>;
    io: t.PartialType<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }, t.TypeOfPartialProps<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.OutputOfPartialProps<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.mixed>;
    console: t.PartialType<{
        appLogging: t.BooleanType;
    }, t.TypeOfPartialProps<{
        appLogging: t.BooleanType;
    }>, t.OutputOfPartialProps<{
        appLogging: t.BooleanType;
    }>, t.mixed>;
    experimental: t.AnyType;
}>, t.mixed>;
export declare type DebuggerCapabilities = t.TypeOf<typeof DebuggerCapabilities>;
export declare const InitializeParams: t.IntersectionType<[t.InterfaceType<{
        capabilities: t.PartialType<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            console: t.PartialType<{
                appLogging: t.BooleanType;
            }, t.TypeOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.mixed>;
            experimental: t.AnyType;
        }, t.TypeOfPartialProps<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            console: t.PartialType<{
                appLogging: t.BooleanType;
            }, t.TypeOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.mixed>;
            experimental: t.AnyType;
        }>, t.OutputOfPartialProps<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            console: t.PartialType<{
                appLogging: t.BooleanType;
            }, t.TypeOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.mixed>;
            experimental: t.AnyType;
        }>, t.mixed>;
    }, t.TypeOfProps<{
        capabilities: t.PartialType<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            console: t.PartialType<{
                appLogging: t.BooleanType;
            }, t.TypeOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.mixed>;
            experimental: t.AnyType;
        }, t.TypeOfPartialProps<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            console: t.PartialType<{
                appLogging: t.BooleanType;
            }, t.TypeOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.mixed>;
            experimental: t.AnyType;
        }>, t.OutputOfPartialProps<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            console: t.PartialType<{
                appLogging: t.BooleanType;
            }, t.TypeOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.mixed>;
            experimental: t.AnyType;
        }>, t.mixed>;
    }>, t.OutputOfProps<{
        capabilities: t.PartialType<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            console: t.PartialType<{
                appLogging: t.BooleanType;
            }, t.TypeOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.mixed>;
            experimental: t.AnyType;
        }, t.TypeOfPartialProps<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            console: t.PartialType<{
                appLogging: t.BooleanType;
            }, t.TypeOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.mixed>;
            experimental: t.AnyType;
        }>, t.OutputOfPartialProps<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            console: t.PartialType<{
                appLogging: t.BooleanType;
            }, t.TypeOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                appLogging: t.BooleanType;
            }>, t.mixed>;
            experimental: t.AnyType;
        }>, t.mixed>;
    }>, t.mixed>, t.PartialType<{
        userAgent: t.StringType;
    }, t.TypeOfPartialProps<{
        userAgent: t.StringType;
    }>, t.OutputOfPartialProps<{
        userAgent: t.StringType;
    }>, t.mixed>], t.TypeOfProps<{
    capabilities: t.PartialType<{
        protocol: t.PartialType<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>;
        io: t.PartialType<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
        console: t.PartialType<{
            appLogging: t.BooleanType;
        }, t.TypeOfPartialProps<{
            appLogging: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            appLogging: t.BooleanType;
        }>, t.mixed>;
        experimental: t.AnyType;
    }, t.TypeOfPartialProps<{
        protocol: t.PartialType<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>;
        io: t.PartialType<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
        console: t.PartialType<{
            appLogging: t.BooleanType;
        }, t.TypeOfPartialProps<{
            appLogging: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            appLogging: t.BooleanType;
        }>, t.mixed>;
        experimental: t.AnyType;
    }>, t.OutputOfPartialProps<{
        protocol: t.PartialType<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>;
        io: t.PartialType<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
        console: t.PartialType<{
            appLogging: t.BooleanType;
        }, t.TypeOfPartialProps<{
            appLogging: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            appLogging: t.BooleanType;
        }>, t.mixed>;
        experimental: t.AnyType;
    }>, t.mixed>;
}> & t.TypeOfPartialProps<{
    userAgent: t.StringType;
}>, t.OutputOfProps<{
    capabilities: t.PartialType<{
        protocol: t.PartialType<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>;
        io: t.PartialType<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
        console: t.PartialType<{
            appLogging: t.BooleanType;
        }, t.TypeOfPartialProps<{
            appLogging: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            appLogging: t.BooleanType;
        }>, t.mixed>;
        experimental: t.AnyType;
    }, t.TypeOfPartialProps<{
        protocol: t.PartialType<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>;
        io: t.PartialType<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
        console: t.PartialType<{
            appLogging: t.BooleanType;
        }, t.TypeOfPartialProps<{
            appLogging: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            appLogging: t.BooleanType;
        }>, t.mixed>;
        experimental: t.AnyType;
    }>, t.OutputOfPartialProps<{
        protocol: t.PartialType<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>;
        io: t.PartialType<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
        console: t.PartialType<{
            appLogging: t.BooleanType;
        }, t.TypeOfPartialProps<{
            appLogging: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            appLogging: t.BooleanType;
        }>, t.mixed>;
        experimental: t.AnyType;
    }>, t.mixed>;
}> & t.OutputOfPartialProps<{
    userAgent: t.StringType;
}>, t.mixed>;
export declare type InitializeParams = t.TypeOf<typeof InitializeParams>;
export declare const APICompatibilityDescriptor: t.IntersectionType<[t.InterfaceType<{
        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
    }, t.TypeOfProps<{
        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
    }>, t.OutputOfProps<{
        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
    }>, t.mixed>, t.PartialType<{
        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
    }, t.TypeOfPartialProps<{
        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
    }>, t.OutputOfPartialProps<{
        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
    }>, t.mixed>], t.TypeOfProps<{
    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
}> & t.TypeOfPartialProps<{
    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
}>, t.OutputOfProps<{
    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
}> & t.OutputOfPartialProps<{
    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
}>, t.mixed>;
export declare type APICompatibilityDescriptor = t.TypeOf<typeof APICompatibilityDescriptor>;
export declare const AppHostDescriptor: t.IntersectionType<[t.PartialType<{
        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
    }, t.TypeOfPartialProps<{
        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
    }>, t.OutputOfPartialProps<{
        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
    }>, t.mixed>, t.InterfaceType<{
        family: t.StringType;
        version: t.StringType;
    }, t.TypeOfProps<{
        family: t.StringType;
        version: t.StringType;
    }>, t.OutputOfProps<{
        family: t.StringType;
        version: t.StringType;
    }>, t.mixed>], t.TypeOfPartialProps<{
    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
}> & t.TypeOfProps<{
    family: t.StringType;
    version: t.StringType;
}>, t.OutputOfPartialProps<{
    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
}> & t.OutputOfProps<{
    family: t.StringType;
    version: t.StringType;
}>, t.mixed>;
export declare type AppHostDescriptor = t.TypeOf<typeof AppHostDescriptor>;
export declare const CompanionHostDescriptor: t.IntersectionType<[t.InterfaceType<{
        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
    }, t.TypeOfProps<{
        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
    }>, t.OutputOfProps<{
        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
    }>, t.mixed>, t.PartialType<{
        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
    }, t.TypeOfPartialProps<{
        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
    }>, t.OutputOfPartialProps<{
        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
    }>, t.mixed>], t.TypeOfProps<{
    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
}> & t.TypeOfPartialProps<{
    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
}>, t.OutputOfProps<{
    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
}> & t.OutputOfPartialProps<{
    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
}>, t.mixed>;
export declare type CompanionHostDescriptor = APICompatibilityDescriptor;
export declare const ApplicationHostCapabilities: t.PartialType<{
    install: t.PartialType<{
        sideloadStream: t.BooleanType;
        appBundle: t.BooleanType;
        companionBundle: t.BooleanType;
        appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                family: t.StringType;
                version: t.StringType;
            }, t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>], t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.mixed>, (t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], (t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], t.mixed>;
        companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }, t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.TypeOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.OutputOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.OutputOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.mixed>;
    }, t.TypeOfPartialProps<{
        sideloadStream: t.BooleanType;
        appBundle: t.BooleanType;
        companionBundle: t.BooleanType;
        appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                family: t.StringType;
                version: t.StringType;
            }, t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>], t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.mixed>, (t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], (t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], t.mixed>;
        companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }, t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.TypeOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.OutputOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.OutputOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.mixed>;
    }>, t.OutputOfPartialProps<{
        sideloadStream: t.BooleanType;
        appBundle: t.BooleanType;
        companionBundle: t.BooleanType;
        appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                family: t.StringType;
                version: t.StringType;
            }, t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>], t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.mixed>, (t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], (t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], t.mixed>;
        companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }, t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.TypeOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.OutputOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.OutputOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.mixed>;
    }>, t.mixed>;
    launch: t.PartialType<{
        appComponent: t.PartialType<{
            canLaunch: t.BooleanType;
        }, t.TypeOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.mixed>;
    }, t.TypeOfPartialProps<{
        appComponent: t.PartialType<{
            canLaunch: t.BooleanType;
        }, t.TypeOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.mixed>;
    }>, t.OutputOfPartialProps<{
        appComponent: t.PartialType<{
            canLaunch: t.BooleanType;
        }, t.TypeOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.mixed>;
    }>, t.mixed>;
    screenshot: t.IntersectionType<[t.PartialType<{
            stream: t.BooleanType;
        }, t.TypeOfPartialProps<{
            stream: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            stream: t.BooleanType;
        }>, t.mixed>, t.InterfaceType<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>], t.TypeOfPartialProps<{
        stream: t.BooleanType;
    }> & t.TypeOfProps<{
        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.OutputOfPartialProps<{
        stream: t.BooleanType;
    }> & t.OutputOfProps<{
        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.mixed>;
}, t.TypeOfPartialProps<{
    install: t.PartialType<{
        sideloadStream: t.BooleanType;
        appBundle: t.BooleanType;
        companionBundle: t.BooleanType;
        appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                family: t.StringType;
                version: t.StringType;
            }, t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>], t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.mixed>, (t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], (t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], t.mixed>;
        companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }, t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.TypeOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.OutputOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.OutputOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.mixed>;
    }, t.TypeOfPartialProps<{
        sideloadStream: t.BooleanType;
        appBundle: t.BooleanType;
        companionBundle: t.BooleanType;
        appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                family: t.StringType;
                version: t.StringType;
            }, t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>], t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.mixed>, (t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], (t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], t.mixed>;
        companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }, t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.TypeOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.OutputOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.OutputOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.mixed>;
    }>, t.OutputOfPartialProps<{
        sideloadStream: t.BooleanType;
        appBundle: t.BooleanType;
        companionBundle: t.BooleanType;
        appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                family: t.StringType;
                version: t.StringType;
            }, t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>], t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.mixed>, (t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], (t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], t.mixed>;
        companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }, t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.TypeOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.OutputOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.OutputOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.mixed>;
    }>, t.mixed>;
    launch: t.PartialType<{
        appComponent: t.PartialType<{
            canLaunch: t.BooleanType;
        }, t.TypeOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.mixed>;
    }, t.TypeOfPartialProps<{
        appComponent: t.PartialType<{
            canLaunch: t.BooleanType;
        }, t.TypeOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.mixed>;
    }>, t.OutputOfPartialProps<{
        appComponent: t.PartialType<{
            canLaunch: t.BooleanType;
        }, t.TypeOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.mixed>;
    }>, t.mixed>;
    screenshot: t.IntersectionType<[t.PartialType<{
            stream: t.BooleanType;
        }, t.TypeOfPartialProps<{
            stream: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            stream: t.BooleanType;
        }>, t.mixed>, t.InterfaceType<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>], t.TypeOfPartialProps<{
        stream: t.BooleanType;
    }> & t.TypeOfProps<{
        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.OutputOfPartialProps<{
        stream: t.BooleanType;
    }> & t.OutputOfProps<{
        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.mixed>;
}>, t.OutputOfPartialProps<{
    install: t.PartialType<{
        sideloadStream: t.BooleanType;
        appBundle: t.BooleanType;
        companionBundle: t.BooleanType;
        appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                family: t.StringType;
                version: t.StringType;
            }, t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>], t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.mixed>, (t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], (t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], t.mixed>;
        companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }, t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.TypeOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.OutputOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.OutputOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.mixed>;
    }, t.TypeOfPartialProps<{
        sideloadStream: t.BooleanType;
        appBundle: t.BooleanType;
        companionBundle: t.BooleanType;
        appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                family: t.StringType;
                version: t.StringType;
            }, t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>], t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.mixed>, (t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], (t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], t.mixed>;
        companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }, t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.TypeOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.OutputOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.OutputOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.mixed>;
    }>, t.OutputOfPartialProps<{
        sideloadStream: t.BooleanType;
        appBundle: t.BooleanType;
        companionBundle: t.BooleanType;
        appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                family: t.StringType;
                version: t.StringType;
            }, t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>], t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>, t.mixed>, (t.TypeOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.TypeOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], (t.OutputOfPartialProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }> & t.OutputOfProps<{
            family: t.StringType;
            version: t.StringType;
        }>)[], t.mixed>;
        companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }, t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.TypeOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.OutputOfProps<{
            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
        }> & t.OutputOfPartialProps<{
            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
        }>, t.mixed>;
    }>, t.mixed>;
    launch: t.PartialType<{
        appComponent: t.PartialType<{
            canLaunch: t.BooleanType;
        }, t.TypeOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.mixed>;
    }, t.TypeOfPartialProps<{
        appComponent: t.PartialType<{
            canLaunch: t.BooleanType;
        }, t.TypeOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.mixed>;
    }>, t.OutputOfPartialProps<{
        appComponent: t.PartialType<{
            canLaunch: t.BooleanType;
        }, t.TypeOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            canLaunch: t.BooleanType;
        }>, t.mixed>;
    }>, t.mixed>;
    screenshot: t.IntersectionType<[t.PartialType<{
            stream: t.BooleanType;
        }, t.TypeOfPartialProps<{
            stream: t.BooleanType;
        }>, t.OutputOfPartialProps<{
            stream: t.BooleanType;
        }>, t.mixed>, t.InterfaceType<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>], t.TypeOfPartialProps<{
        stream: t.BooleanType;
    }> & t.TypeOfProps<{
        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.OutputOfPartialProps<{
        stream: t.BooleanType;
    }> & t.OutputOfProps<{
        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.mixed>;
}>, t.mixed>;
export declare type ApplicationHostCapabilities = t.TypeOf<typeof ApplicationHostCapabilities>;
export declare const HostCapabilities: t.PartialType<{
    protocol: t.PartialType<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }, t.TypeOfPartialProps<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }>, t.OutputOfPartialProps<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }>, t.mixed>;
    io: t.PartialType<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }, t.TypeOfPartialProps<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.OutputOfPartialProps<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.mixed>;
    appHost: t.PartialType<{
        install: t.PartialType<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        launch: t.PartialType<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.mixed>;
        screenshot: t.IntersectionType<[t.PartialType<{
                stream: t.BooleanType;
            }, t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }>, t.mixed>, t.InterfaceType<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfPartialProps<{
            stream: t.BooleanType;
        }> & t.TypeOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            stream: t.BooleanType;
        }> & t.OutputOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
    }, t.TypeOfPartialProps<{
        install: t.PartialType<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        launch: t.PartialType<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.mixed>;
        screenshot: t.IntersectionType<[t.PartialType<{
                stream: t.BooleanType;
            }, t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }>, t.mixed>, t.InterfaceType<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfPartialProps<{
            stream: t.BooleanType;
        }> & t.TypeOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            stream: t.BooleanType;
        }> & t.OutputOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
    }>, t.OutputOfPartialProps<{
        install: t.PartialType<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        launch: t.PartialType<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.mixed>;
        screenshot: t.IntersectionType<[t.PartialType<{
                stream: t.BooleanType;
            }, t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }>, t.mixed>, t.InterfaceType<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfPartialProps<{
            stream: t.BooleanType;
        }> & t.TypeOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            stream: t.BooleanType;
        }> & t.OutputOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
    }>, t.mixed>;
    experimental: t.AnyType;
}, t.TypeOfPartialProps<{
    protocol: t.PartialType<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }, t.TypeOfPartialProps<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }>, t.OutputOfPartialProps<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }>, t.mixed>;
    io: t.PartialType<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }, t.TypeOfPartialProps<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.OutputOfPartialProps<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.mixed>;
    appHost: t.PartialType<{
        install: t.PartialType<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        launch: t.PartialType<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.mixed>;
        screenshot: t.IntersectionType<[t.PartialType<{
                stream: t.BooleanType;
            }, t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }>, t.mixed>, t.InterfaceType<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfPartialProps<{
            stream: t.BooleanType;
        }> & t.TypeOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            stream: t.BooleanType;
        }> & t.OutputOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
    }, t.TypeOfPartialProps<{
        install: t.PartialType<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        launch: t.PartialType<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.mixed>;
        screenshot: t.IntersectionType<[t.PartialType<{
                stream: t.BooleanType;
            }, t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }>, t.mixed>, t.InterfaceType<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfPartialProps<{
            stream: t.BooleanType;
        }> & t.TypeOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            stream: t.BooleanType;
        }> & t.OutputOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
    }>, t.OutputOfPartialProps<{
        install: t.PartialType<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        launch: t.PartialType<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.mixed>;
        screenshot: t.IntersectionType<[t.PartialType<{
                stream: t.BooleanType;
            }, t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }>, t.mixed>, t.InterfaceType<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfPartialProps<{
            stream: t.BooleanType;
        }> & t.TypeOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            stream: t.BooleanType;
        }> & t.OutputOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
    }>, t.mixed>;
    experimental: t.AnyType;
}>, t.OutputOfPartialProps<{
    protocol: t.PartialType<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }, t.TypeOfPartialProps<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }>, t.OutputOfPartialProps<{
        batchRequest: t.BooleanType;
        maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }>, t.mixed>;
    io: t.PartialType<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }, t.TypeOfPartialProps<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.OutputOfPartialProps<{
        write: t.BooleanType;
        additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
    }>, t.mixed>;
    appHost: t.PartialType<{
        install: t.PartialType<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        launch: t.PartialType<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.mixed>;
        screenshot: t.IntersectionType<[t.PartialType<{
                stream: t.BooleanType;
            }, t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }>, t.mixed>, t.InterfaceType<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfPartialProps<{
            stream: t.BooleanType;
        }> & t.TypeOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            stream: t.BooleanType;
        }> & t.OutputOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
    }, t.TypeOfPartialProps<{
        install: t.PartialType<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        launch: t.PartialType<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.mixed>;
        screenshot: t.IntersectionType<[t.PartialType<{
                stream: t.BooleanType;
            }, t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }>, t.mixed>, t.InterfaceType<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfPartialProps<{
            stream: t.BooleanType;
        }> & t.TypeOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            stream: t.BooleanType;
        }> & t.OutputOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
    }>, t.OutputOfPartialProps<{
        install: t.PartialType<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            sideloadStream: t.BooleanType;
            appBundle: t.BooleanType;
            companionBundle: t.BooleanType;
            appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>, t.InterfaceType<{
                    family: t.StringType;
                    version: t.StringType;
                }, t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>], t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>, t.mixed>, (t.TypeOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.TypeOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], (t.OutputOfPartialProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }> & t.OutputOfProps<{
                family: t.StringType;
                version: t.StringType;
            }>)[], t.mixed>;
            companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }, t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }>, t.mixed>, t.PartialType<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }, t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.TypeOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
            }> & t.OutputOfPartialProps<{
                exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        launch: t.PartialType<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            appComponent: t.PartialType<{
                canLaunch: t.BooleanType;
            }, t.TypeOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                canLaunch: t.BooleanType;
            }>, t.mixed>;
        }>, t.mixed>;
        screenshot: t.IntersectionType<[t.PartialType<{
                stream: t.BooleanType;
            }, t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }>, t.mixed>, t.InterfaceType<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>], t.TypeOfPartialProps<{
            stream: t.BooleanType;
        }> & t.TypeOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            stream: t.BooleanType;
        }> & t.OutputOfProps<{
            imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
    }>, t.mixed>;
    experimental: t.AnyType;
}>, t.mixed>;
export declare type HostCapabilities = t.TypeOf<typeof HostCapabilities>;
export declare const HostKind: t.UnionType<(t.LiteralType<"companion"> | t.LiteralType<"device">)[], "companion" | "device", "companion" | "device", t.mixed>;
export declare type HostKind = t.TypeOf<typeof HostKind>;
export declare const InitializeResult: t.IntersectionType<[t.InterfaceType<{
        device: t.StringType;
        hostKind: t.UnionType<(t.LiteralType<"companion"> | t.LiteralType<"device">)[], "companion" | "device", "companion" | "device", t.mixed>;
        capabilities: t.PartialType<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            appHost: t.PartialType<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            experimental: t.AnyType;
        }, t.TypeOfPartialProps<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            appHost: t.PartialType<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            experimental: t.AnyType;
        }>, t.OutputOfPartialProps<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            appHost: t.PartialType<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            experimental: t.AnyType;
        }>, t.mixed>;
    }, t.TypeOfProps<{
        device: t.StringType;
        hostKind: t.UnionType<(t.LiteralType<"companion"> | t.LiteralType<"device">)[], "companion" | "device", "companion" | "device", t.mixed>;
        capabilities: t.PartialType<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            appHost: t.PartialType<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            experimental: t.AnyType;
        }, t.TypeOfPartialProps<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            appHost: t.PartialType<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            experimental: t.AnyType;
        }>, t.OutputOfPartialProps<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            appHost: t.PartialType<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            experimental: t.AnyType;
        }>, t.mixed>;
    }>, t.OutputOfProps<{
        device: t.StringType;
        hostKind: t.UnionType<(t.LiteralType<"companion"> | t.LiteralType<"device">)[], "companion" | "device", "companion" | "device", t.mixed>;
        capabilities: t.PartialType<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            appHost: t.PartialType<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            experimental: t.AnyType;
        }, t.TypeOfPartialProps<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            appHost: t.PartialType<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            experimental: t.AnyType;
        }>, t.OutputOfPartialProps<{
            protocol: t.PartialType<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfPartialProps<{
                batchRequest: t.BooleanType;
                maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>;
            io: t.PartialType<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }, t.TypeOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                write: t.BooleanType;
                additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
            appHost: t.PartialType<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                install: t.PartialType<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    sideloadStream: t.BooleanType;
                    appBundle: t.BooleanType;
                    companionBundle: t.BooleanType;
                    appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>, t.InterfaceType<{
                            family: t.StringType;
                            version: t.StringType;
                        }, t.TypeOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.OutputOfProps<{
                            family: t.StringType;
                            version: t.StringType;
                        }>, t.mixed>], t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>, (t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], (t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }> & t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>)[], t.mixed>;
                    companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }, t.TypeOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.OutputOfProps<{
                            maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        }>, t.mixed>, t.PartialType<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }, t.TypeOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.OutputOfPartialProps<{
                            exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                        }>, t.mixed>], t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }> & t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>;
                }>, t.mixed>;
                launch: t.PartialType<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }, t.TypeOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.OutputOfPartialProps<{
                    appComponent: t.PartialType<{
                        canLaunch: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        canLaunch: t.BooleanType;
                    }>, t.mixed>;
                }>, t.mixed>;
                screenshot: t.IntersectionType<[t.PartialType<{
                        stream: t.BooleanType;
                    }, t.TypeOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.OutputOfPartialProps<{
                        stream: t.BooleanType;
                    }>, t.mixed>, t.InterfaceType<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }, t.TypeOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.OutputOfProps<{
                        imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }> & t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            experimental: t.AnyType;
        }>, t.mixed>;
    }>, t.mixed>, t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, t.mixed>], t.TypeOfProps<{
    device: t.StringType;
    hostKind: t.UnionType<(t.LiteralType<"companion"> | t.LiteralType<"device">)[], "companion" | "device", "companion" | "device", t.mixed>;
    capabilities: t.PartialType<{
        protocol: t.PartialType<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>;
        io: t.PartialType<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
        appHost: t.PartialType<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        experimental: t.AnyType;
    }, t.TypeOfPartialProps<{
        protocol: t.PartialType<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>;
        io: t.PartialType<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
        appHost: t.PartialType<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        experimental: t.AnyType;
    }>, t.OutputOfPartialProps<{
        protocol: t.PartialType<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>;
        io: t.PartialType<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
        appHost: t.PartialType<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        experimental: t.AnyType;
    }>, t.mixed>;
}> & t.TypeOfPartialProps<{
    hostID: t.StringType;
}>, t.OutputOfProps<{
    device: t.StringType;
    hostKind: t.UnionType<(t.LiteralType<"companion"> | t.LiteralType<"device">)[], "companion" | "device", "companion" | "device", t.mixed>;
    capabilities: t.PartialType<{
        protocol: t.PartialType<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>;
        io: t.PartialType<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
        appHost: t.PartialType<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        experimental: t.AnyType;
    }, t.TypeOfPartialProps<{
        protocol: t.PartialType<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>;
        io: t.PartialType<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
        appHost: t.PartialType<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        experimental: t.AnyType;
    }>, t.OutputOfPartialProps<{
        protocol: t.PartialType<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfPartialProps<{
            batchRequest: t.BooleanType;
            maxMessageSize: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>;
        io: t.PartialType<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }, t.TypeOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.OutputOfPartialProps<{
            write: t.BooleanType;
            additionalEncodings: t.ArrayType<t.StringType, string[], string[], t.mixed>;
        }>, t.mixed>;
        appHost: t.PartialType<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }, t.TypeOfPartialProps<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.OutputOfPartialProps<{
            install: t.PartialType<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                sideloadStream: t.BooleanType;
                appBundle: t.BooleanType;
                companionBundle: t.BooleanType;
                appCompatibility: t.ArrayType<t.IntersectionType<[t.PartialType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>, t.InterfaceType<{
                        family: t.StringType;
                        version: t.StringType;
                    }, t.TypeOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.OutputOfProps<{
                        family: t.StringType;
                        version: t.StringType;
                    }>, t.mixed>], t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>, t.mixed>, (t.TypeOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.TypeOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], (t.OutputOfPartialProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }> & t.OutputOfProps<{
                    family: t.StringType;
                    version: t.StringType;
                }>)[], t.mixed>;
                companionCompatibility: t.IntersectionType<[t.InterfaceType<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }, t.TypeOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.OutputOfProps<{
                        maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                    }>, t.mixed>, t.PartialType<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }, t.TypeOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.OutputOfPartialProps<{
                        exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                    }>, t.mixed>], t.TypeOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.TypeOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    maxAPIVersion: t.RefinementType<t.Type<string, string, t.mixed>, string, string, t.mixed>;
                }> & t.OutputOfPartialProps<{
                    exactAPIVersion: t.ArrayType<t.Type<string, string, t.mixed>, string[], string[], t.mixed>;
                }>, t.mixed>;
            }>, t.mixed>;
            launch: t.PartialType<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }, t.TypeOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.OutputOfPartialProps<{
                appComponent: t.PartialType<{
                    canLaunch: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    canLaunch: t.BooleanType;
                }>, t.mixed>;
            }>, t.mixed>;
            screenshot: t.IntersectionType<[t.PartialType<{
                    stream: t.BooleanType;
                }, t.TypeOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.OutputOfPartialProps<{
                    stream: t.BooleanType;
                }>, t.mixed>, t.InterfaceType<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }, t.TypeOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.OutputOfProps<{
                    imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
                }>, t.mixed>], t.TypeOfPartialProps<{
                stream: t.BooleanType;
            }> & t.TypeOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.OutputOfPartialProps<{
                stream: t.BooleanType;
            }> & t.OutputOfProps<{
                imageFormats: t.ArrayType<t.StringType, string[], string[], t.mixed>;
            }>, t.mixed>;
        }>, t.mixed>;
        experimental: t.AnyType;
    }>, t.mixed>;
}> & t.OutputOfPartialProps<{
    hostID: t.StringType;
}>, t.mixed>;
export declare type InitializeResult = t.TypeOf<typeof InitializeResult>;
export declare const ConsoleMessageKind: t.UnionType<(t.LiteralType<"log"> | t.LiteralType<"info"> | t.LiteralType<"warn"> | t.LiteralType<"error">)[], "error" | "log" | "info" | "warn", "error" | "log" | "info" | "warn", t.mixed>;
export declare type ConsoleMessageKind = t.TypeOf<typeof ConsoleMessageKind>;
export declare const ConsoleMessage: t.IntersectionType<[t.PartialType<{
        timestamp: t.NumberType;
        position: t.IntersectionType<[t.InterfaceType<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfProps<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfProps<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                generated: t.BooleanType;
                name: t.StringType;
            }, t.TypeOfPartialProps<{
                generated: t.BooleanType;
                name: t.StringType;
            }>, t.OutputOfPartialProps<{
                generated: t.BooleanType;
                name: t.StringType;
            }>, t.mixed>], t.TypeOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.TypeOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.OutputOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.OutputOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.mixed>;
        fromHost: t.BooleanType;
    }, t.TypeOfPartialProps<{
        timestamp: t.NumberType;
        position: t.IntersectionType<[t.InterfaceType<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfProps<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfProps<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                generated: t.BooleanType;
                name: t.StringType;
            }, t.TypeOfPartialProps<{
                generated: t.BooleanType;
                name: t.StringType;
            }>, t.OutputOfPartialProps<{
                generated: t.BooleanType;
                name: t.StringType;
            }>, t.mixed>], t.TypeOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.TypeOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.OutputOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.OutputOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.mixed>;
        fromHost: t.BooleanType;
    }>, t.OutputOfPartialProps<{
        timestamp: t.NumberType;
        position: t.IntersectionType<[t.InterfaceType<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfProps<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfProps<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                generated: t.BooleanType;
                name: t.StringType;
            }, t.TypeOfPartialProps<{
                generated: t.BooleanType;
                name: t.StringType;
            }>, t.OutputOfPartialProps<{
                generated: t.BooleanType;
                name: t.StringType;
            }>, t.mixed>], t.TypeOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.TypeOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.OutputOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.OutputOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.mixed>;
        fromHost: t.BooleanType;
    }>, t.mixed>, t.InterfaceType<{
        emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }, t.TypeOfProps<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }, t.TypeOfProps<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }>, t.OutputOfProps<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.mixed> | t.PartialType<{
            hostID: t.StringType;
        }, t.TypeOfPartialProps<{
            hostID: t.StringType;
        }>, t.OutputOfPartialProps<{
            hostID: t.StringType;
        }>, t.mixed>)[], (t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>) | t.TypeOfPartialProps<{
            hostID: t.StringType;
        }>, (t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>) | t.OutputOfPartialProps<{
            hostID: t.StringType;
        }>, t.mixed>;
        kind: t.UnionType<(t.LiteralType<"log"> | t.LiteralType<"info"> | t.LiteralType<"warn"> | t.LiteralType<"error">)[], "error" | "log" | "info" | "warn", "error" | "log" | "info" | "warn", t.mixed>;
        message: t.ArrayType<t.AnyType, any[], any[], t.mixed>;
    }, t.TypeOfProps<{
        emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }, t.TypeOfProps<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }, t.TypeOfProps<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }>, t.OutputOfProps<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.mixed> | t.PartialType<{
            hostID: t.StringType;
        }, t.TypeOfPartialProps<{
            hostID: t.StringType;
        }>, t.OutputOfPartialProps<{
            hostID: t.StringType;
        }>, t.mixed>)[], (t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>) | t.TypeOfPartialProps<{
            hostID: t.StringType;
        }>, (t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>) | t.OutputOfPartialProps<{
            hostID: t.StringType;
        }>, t.mixed>;
        kind: t.UnionType<(t.LiteralType<"log"> | t.LiteralType<"info"> | t.LiteralType<"warn"> | t.LiteralType<"error">)[], "error" | "log" | "info" | "warn", "error" | "log" | "info" | "warn", t.mixed>;
        message: t.ArrayType<t.AnyType, any[], any[], t.mixed>;
    }>, t.OutputOfProps<{
        emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }, t.TypeOfProps<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }, t.TypeOfProps<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }>, t.OutputOfProps<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.mixed> | t.PartialType<{
            hostID: t.StringType;
        }, t.TypeOfPartialProps<{
            hostID: t.StringType;
        }>, t.OutputOfPartialProps<{
            hostID: t.StringType;
        }>, t.mixed>)[], (t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>) | t.TypeOfPartialProps<{
            hostID: t.StringType;
        }>, (t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>) | t.OutputOfPartialProps<{
            hostID: t.StringType;
        }>, t.mixed>;
        kind: t.UnionType<(t.LiteralType<"log"> | t.LiteralType<"info"> | t.LiteralType<"warn"> | t.LiteralType<"error">)[], "error" | "log" | "info" | "warn", "error" | "log" | "info" | "warn", t.mixed>;
        message: t.ArrayType<t.AnyType, any[], any[], t.mixed>;
    }>, t.mixed>], t.TypeOfPartialProps<{
    timestamp: t.NumberType;
    position: t.IntersectionType<[t.InterfaceType<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>, t.PartialType<{
            generated: t.BooleanType;
            name: t.StringType;
        }, t.TypeOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.OutputOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.mixed>], t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.mixed>;
    fromHost: t.BooleanType;
}> & t.TypeOfProps<{
    emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }, t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }>, t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }>, t.mixed>, t.InterfaceType<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }, t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.mixed>], t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>, t.mixed> | t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, t.mixed>)[], (t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>) | t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, (t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>) | t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, t.mixed>;
    kind: t.UnionType<(t.LiteralType<"log"> | t.LiteralType<"info"> | t.LiteralType<"warn"> | t.LiteralType<"error">)[], "error" | "log" | "info" | "warn", "error" | "log" | "info" | "warn", t.mixed>;
    message: t.ArrayType<t.AnyType, any[], any[], t.mixed>;
}>, t.OutputOfPartialProps<{
    timestamp: t.NumberType;
    position: t.IntersectionType<[t.InterfaceType<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>, t.PartialType<{
            generated: t.BooleanType;
            name: t.StringType;
        }, t.TypeOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.OutputOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.mixed>], t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.mixed>;
    fromHost: t.BooleanType;
}> & t.OutputOfProps<{
    emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }, t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }>, t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }>, t.mixed>, t.InterfaceType<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }, t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.mixed>], t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>, t.mixed> | t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, t.mixed>)[], (t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>) | t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, (t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>) | t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, t.mixed>;
    kind: t.UnionType<(t.LiteralType<"log"> | t.LiteralType<"info"> | t.LiteralType<"warn"> | t.LiteralType<"error">)[], "error" | "log" | "info" | "warn", "error" | "log" | "info" | "warn", t.mixed>;
    message: t.ArrayType<t.AnyType, any[], any[], t.mixed>;
}>, t.mixed>;
export declare type ConsoleMessage = t.TypeOf<typeof ConsoleMessage>;
export declare const TraceMessageKind: t.UnionType<(t.LiteralType<"trace"> | t.LiteralType<"assert"> | t.LiteralType<"exception">)[], "trace" | "assert" | "exception", "trace" | "assert" | "exception", t.mixed>;
export declare type TraceMessageKind = t.TypeOf<typeof TraceMessageKind>;
export declare const TraceMessage: t.IntersectionType<[t.InterfaceType<{
        emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }, t.TypeOfProps<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }, t.TypeOfProps<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }>, t.OutputOfProps<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.mixed> | t.PartialType<{
            hostID: t.StringType;
        }, t.TypeOfPartialProps<{
            hostID: t.StringType;
        }>, t.OutputOfPartialProps<{
            hostID: t.StringType;
        }>, t.mixed>)[], (t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>) | t.TypeOfPartialProps<{
            hostID: t.StringType;
        }>, (t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>) | t.OutputOfPartialProps<{
            hostID: t.StringType;
        }>, t.mixed>;
        stack: t.ArrayType<t.IntersectionType<[t.InterfaceType<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfProps<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfProps<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                generated: t.BooleanType;
                name: t.StringType;
            }, t.TypeOfPartialProps<{
                generated: t.BooleanType;
                name: t.StringType;
            }>, t.OutputOfPartialProps<{
                generated: t.BooleanType;
                name: t.StringType;
            }>, t.mixed>], t.TypeOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.TypeOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.OutputOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.OutputOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.mixed>, (t.TypeOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.TypeOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>)[], (t.OutputOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.OutputOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>)[], t.mixed>;
        kind: t.UnionType<(t.LiteralType<"trace"> | t.LiteralType<"assert"> | t.LiteralType<"exception">)[], "trace" | "assert" | "exception", "trace" | "assert" | "exception", t.mixed>;
        message: t.ArrayType<t.AnyType, any[], any[], t.mixed>;
    }, t.TypeOfProps<{
        emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }, t.TypeOfProps<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }, t.TypeOfProps<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }>, t.OutputOfProps<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.mixed> | t.PartialType<{
            hostID: t.StringType;
        }, t.TypeOfPartialProps<{
            hostID: t.StringType;
        }>, t.OutputOfPartialProps<{
            hostID: t.StringType;
        }>, t.mixed>)[], (t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>) | t.TypeOfPartialProps<{
            hostID: t.StringType;
        }>, (t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>) | t.OutputOfPartialProps<{
            hostID: t.StringType;
        }>, t.mixed>;
        stack: t.ArrayType<t.IntersectionType<[t.InterfaceType<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfProps<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfProps<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                generated: t.BooleanType;
                name: t.StringType;
            }, t.TypeOfPartialProps<{
                generated: t.BooleanType;
                name: t.StringType;
            }>, t.OutputOfPartialProps<{
                generated: t.BooleanType;
                name: t.StringType;
            }>, t.mixed>], t.TypeOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.TypeOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.OutputOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.OutputOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.mixed>, (t.TypeOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.TypeOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>)[], (t.OutputOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.OutputOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>)[], t.mixed>;
        kind: t.UnionType<(t.LiteralType<"trace"> | t.LiteralType<"assert"> | t.LiteralType<"exception">)[], "trace" | "assert" | "exception", "trace" | "assert" | "exception", t.mixed>;
        message: t.ArrayType<t.AnyType, any[], any[], t.mixed>;
    }>, t.OutputOfProps<{
        emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }, t.TypeOfProps<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }>, t.OutputOfProps<{
                uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
                buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
            }>, t.mixed>, t.InterfaceType<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }, t.TypeOfProps<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }>, t.OutputOfProps<{
                component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
            }>, t.mixed>], t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.mixed> | t.PartialType<{
            hostID: t.StringType;
        }, t.TypeOfPartialProps<{
            hostID: t.StringType;
        }>, t.OutputOfPartialProps<{
            hostID: t.StringType;
        }>, t.mixed>)[], (t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>) | t.TypeOfPartialProps<{
            hostID: t.StringType;
        }>, (t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }> & t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>) | t.OutputOfPartialProps<{
            hostID: t.StringType;
        }>, t.mixed>;
        stack: t.ArrayType<t.IntersectionType<[t.InterfaceType<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }, t.TypeOfProps<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.OutputOfProps<{
                source: t.RefinementType<t.StringType, string, string, t.mixed>;
                line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
                column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            }>, t.mixed>, t.PartialType<{
                generated: t.BooleanType;
                name: t.StringType;
            }, t.TypeOfPartialProps<{
                generated: t.BooleanType;
                name: t.StringType;
            }>, t.OutputOfPartialProps<{
                generated: t.BooleanType;
                name: t.StringType;
            }>, t.mixed>], t.TypeOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.TypeOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.OutputOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.OutputOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.mixed>, (t.TypeOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.TypeOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>)[], (t.OutputOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }> & t.OutputOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>)[], t.mixed>;
        kind: t.UnionType<(t.LiteralType<"trace"> | t.LiteralType<"assert"> | t.LiteralType<"exception">)[], "trace" | "assert" | "exception", "trace" | "assert" | "exception", t.mixed>;
        message: t.ArrayType<t.AnyType, any[], any[], t.mixed>;
    }>, t.mixed>, t.PartialType<{
        timestamp: t.NumberType;
    }, t.TypeOfPartialProps<{
        timestamp: t.NumberType;
    }>, t.OutputOfPartialProps<{
        timestamp: t.NumberType;
    }>, t.mixed>], t.TypeOfProps<{
    emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }, t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }>, t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }>, t.mixed>, t.InterfaceType<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }, t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.mixed>], t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>, t.mixed> | t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, t.mixed>)[], (t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>) | t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, (t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>) | t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, t.mixed>;
    stack: t.ArrayType<t.IntersectionType<[t.InterfaceType<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>, t.PartialType<{
            generated: t.BooleanType;
            name: t.StringType;
        }, t.TypeOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.OutputOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.mixed>], t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.mixed>, (t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>)[], (t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>)[], t.mixed>;
    kind: t.UnionType<(t.LiteralType<"trace"> | t.LiteralType<"assert"> | t.LiteralType<"exception">)[], "trace" | "assert" | "exception", "trace" | "assert" | "exception", t.mixed>;
    message: t.ArrayType<t.AnyType, any[], any[], t.mixed>;
}> & t.TypeOfPartialProps<{
    timestamp: t.NumberType;
}>, t.OutputOfProps<{
    emittedBy: t.UnionType<(t.IntersectionType<[t.InterfaceType<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }, t.TypeOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }>, t.OutputOfProps<{
            uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
            buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
        }>, t.mixed>, t.InterfaceType<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }, t.TypeOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.OutputOfProps<{
            component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
        }>, t.mixed>], t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>, t.mixed> | t.PartialType<{
        hostID: t.StringType;
    }, t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, t.mixed>)[], (t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.TypeOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>) | t.TypeOfPartialProps<{
        hostID: t.StringType;
    }>, (t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }> & t.OutputOfProps<{
        component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
    }>) | t.OutputOfPartialProps<{
        hostID: t.StringType;
    }>, t.mixed>;
    stack: t.ArrayType<t.IntersectionType<[t.InterfaceType<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }, t.TypeOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.OutputOfProps<{
            source: t.RefinementType<t.StringType, string, string, t.mixed>;
            line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
            column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        }>, t.mixed>, t.PartialType<{
            generated: t.BooleanType;
            name: t.StringType;
        }, t.TypeOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.OutputOfPartialProps<{
            generated: t.BooleanType;
            name: t.StringType;
        }>, t.mixed>], t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>, t.mixed>, (t.TypeOfProps<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }> & t.TypeOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>)[], (t.OutputOfProps<{
        source: t.RefinementType<t.StringType, string, string, t.mixed>;
        line: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
        column: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
    }> & t.OutputOfPartialProps<{
        generated: t.BooleanType;
        name: t.StringType;
    }>)[], t.mixed>;
    kind: t.UnionType<(t.LiteralType<"trace"> | t.LiteralType<"assert"> | t.LiteralType<"exception">)[], "trace" | "assert" | "exception", "trace" | "assert" | "exception", t.mixed>;
    message: t.ArrayType<t.AnyType, any[], any[], t.mixed>;
}> & t.OutputOfPartialProps<{
    timestamp: t.NumberType;
}>, t.mixed>;
export declare type TraceMessage = t.TypeOf<typeof TraceMessage>;
export declare const StreamToken: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
export declare type StreamToken = t.TypeOf<typeof StreamToken>;
export declare const StreamOpenResponse: t.InterfaceType<{
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
}, t.TypeOfProps<{
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
}>, t.OutputOfProps<{
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
}>, t.mixed>;
export declare type StreamOpenResponse = t.TypeOf<typeof StreamOpenResponse>;
export declare const StreamCloseParams: t.InterfaceType<{
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
}, t.TypeOfProps<{
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
}>, t.OutputOfProps<{
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
}>, t.mixed>;
export declare type StreamCloseParams = t.TypeOf<typeof StreamCloseParams>;
export declare const IOWriteParams: t.IntersectionType<[t.InterfaceType<{
        stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
        data: t.StringType;
    }, t.TypeOfProps<{
        stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
        data: t.StringType;
    }>, t.OutputOfProps<{
        stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
        data: t.StringType;
    }>, t.mixed>, t.PartialType<{
        encoding: t.StringType;
    }, t.TypeOfPartialProps<{
        encoding: t.StringType;
    }>, t.OutputOfPartialProps<{
        encoding: t.StringType;
    }>, t.mixed>], t.TypeOfProps<{
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
    data: t.StringType;
}> & t.TypeOfPartialProps<{
    encoding: t.StringType;
}>, t.OutputOfProps<{
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
    data: t.StringType;
}> & t.OutputOfPartialProps<{
    encoding: t.StringType;
}>, t.mixed>;
export declare type IOWriteParams = t.TypeOf<typeof IOWriteParams>;
export declare const ComponentBundleKind: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion">)[], "app" | "companion", "app" | "companion", t.mixed>;
export declare type ComponentBundleKind = t.TypeOf<typeof ComponentBundleKind>;
export declare const AppInstallStreamBeginParams: t.InterfaceType<{
    componentBundle: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion">)[], "app" | "companion", "app" | "companion", t.mixed>;
}, t.TypeOfProps<{
    componentBundle: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion">)[], "app" | "companion", "app" | "companion", t.mixed>;
}>, t.OutputOfProps<{
    componentBundle: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion">)[], "app" | "companion", "app" | "companion", t.mixed>;
}>, t.mixed>;
export declare type AppInstallStreamBeginParams = t.TypeOf<typeof AppInstallStreamBeginParams>;
export declare const AppInstallResult: t.InterfaceType<{
    app: t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }>, t.mixed>;
    components: t.ArrayType<t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>, ("app" | "companion" | "settings")[], ("app" | "companion" | "settings")[], t.mixed>;
}, t.TypeOfProps<{
    app: t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }>, t.mixed>;
    components: t.ArrayType<t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>, ("app" | "companion" | "settings")[], ("app" | "companion" | "settings")[], t.mixed>;
}>, t.OutputOfProps<{
    app: t.InterfaceType<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }, t.TypeOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }>, t.OutputOfProps<{
        uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
        buildID: t.RefinementType<t.StringType, string, string, t.mixed>;
    }>, t.mixed>;
    components: t.ArrayType<t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>, ("app" | "companion" | "settings")[], ("app" | "companion" | "settings")[], t.mixed>;
}>, t.mixed>;
export declare type AppInstallResult = t.TypeOf<typeof AppInstallResult>;
export declare const LaunchComponentParams: t.InterfaceType<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
}, t.TypeOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
}>, t.OutputOfProps<{
    uuid: t.RefinementType<t.StringType, string, string, t.mixed>;
    component: t.UnionType<(t.LiteralType<"app"> | t.LiteralType<"companion"> | t.LiteralType<"settings">)[], "app" | "companion" | "settings", "app" | "companion" | "settings", t.mixed>;
}>, t.mixed>;
export declare type LaunchComponentParams = t.TypeOf<typeof LaunchComponentParams>;
export declare const AppScreenshotStreamCaptureParams: t.InterfaceType<{
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
    imageFormat: t.StringType;
}, t.TypeOfProps<{
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
    imageFormat: t.StringType;
}>, t.OutputOfProps<{
    stream: t.UnionType<(t.StringType | t.RefinementType<t.NumberType, number, number, t.mixed>)[], string | number, string | number, t.mixed>;
    imageFormat: t.StringType;
}>, t.mixed>;
export declare type AppScreenshotStreamCaptureParams = t.TypeOf<typeof AppScreenshotStreamCaptureParams>;
export declare const AppScreenshotStreamCaptureResult: t.PartialType<{
    length: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
}, t.TypeOfPartialProps<{
    length: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
}>, t.OutputOfPartialProps<{
    length: t.RefinementType<t.RefinementType<t.NumberType, number, number, t.mixed>, number, number, t.mixed>;
}>, t.mixed>;
export declare type AppScreenshotStreamCaptureResult = t.TypeOf<typeof AppScreenshotStreamCaptureResult>;
export declare const AppDebugEvalParams: t.InterfaceType<{
    cmd: t.StringType;
}, t.TypeOfProps<{
    cmd: t.StringType;
}>, t.OutputOfProps<{
    cmd: t.StringType;
}>, t.mixed>;
export declare type AppDebugEvalParams = t.TypeOf<typeof AppDebugEvalParams>;
export declare const AppDebugEvalValueResult: t.InterfaceType<{
    success: t.LiteralType<true>;
    value: t.StringType;
}, t.TypeOfProps<{
    success: t.LiteralType<true>;
    value: t.StringType;
}>, t.OutputOfProps<{
    success: t.LiteralType<true>;
    value: t.StringType;
}>, t.mixed>;
export declare type AppDebugEvalValueResult = t.TypeOf<typeof AppDebugEvalValueResult>;
export declare const AppDebugEvalFailureResult: t.InterfaceType<{
    success: t.LiteralType<false>;
}, t.TypeOfProps<{
    success: t.LiteralType<false>;
}>, t.OutputOfProps<{
    success: t.LiteralType<false>;
}>, t.mixed>;
export declare type AppDebugEvalFailureResult = t.TypeOf<typeof AppDebugEvalFailureResult>;
export declare const AppDebugEvalResult: t.UnionType<(t.InterfaceType<{
    success: t.LiteralType<true>;
    value: t.StringType;
}, t.TypeOfProps<{
    success: t.LiteralType<true>;
    value: t.StringType;
}>, t.OutputOfProps<{
    success: t.LiteralType<true>;
    value: t.StringType;
}>, t.mixed> | t.InterfaceType<{
    success: t.LiteralType<false>;
}, t.TypeOfProps<{
    success: t.LiteralType<false>;
}>, t.OutputOfProps<{
    success: t.LiteralType<false>;
}>, t.mixed>)[], t.TypeOfProps<{
    success: t.LiteralType<true>;
    value: t.StringType;
}> | t.TypeOfProps<{
    success: t.LiteralType<false>;
}>, t.OutputOfProps<{
    success: t.LiteralType<true>;
    value: t.StringType;
}> | t.OutputOfProps<{
    success: t.LiteralType<false>;
}>, t.mixed>;
export declare type AppDebugEvalResult = t.TypeOf<typeof AppDebugEvalResult>;
