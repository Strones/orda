import { SourceMapConsumer } from 'source-map';
import { ConsoleMessage, ConsoleTrace } from '@fitbit/fdb-debugger';
import { FDBTypes } from '@fitbit/fdb-protocol';
export interface SourceMapConsumers {
    [source: string]: SourceMapConsumer;
}
export interface ComponentSourceMapConsumers {
    app?: SourceMapConsumers;
    companion?: SourceMapConsumers;
    settings?: SourceMapConsumers;
}
export declare function appURItoPath(uri: string): string;
export declare function transformPosition(position: FDBTypes.Position, sourceMaps?: SourceMapConsumers): import("../../../../Shared/fitbit-sdk/node_modules/io-ts").TypeOfProps<{
    source: import("../../../../Shared/fitbit-sdk/node_modules/io-ts").RefinementType<import("../../../../Shared/fitbit-sdk/node_modules/io-ts").StringType, string, string, import("../../../../Shared/fitbit-sdk/node_modules/io-ts").mixed>;
    line: import("../../../../Shared/fitbit-sdk/node_modules/io-ts").RefinementType<import("../../../../Shared/fitbit-sdk/node_modules/io-ts").RefinementType<import("../../../../Shared/fitbit-sdk/node_modules/io-ts").NumberType, number, number, import("../../../../Shared/fitbit-sdk/node_modules/io-ts").mixed>, number, number, import("../../../../Shared/fitbit-sdk/node_modules/io-ts").mixed>;
    column: import("../../../../Shared/fitbit-sdk/node_modules/io-ts").RefinementType<import("../../../../Shared/fitbit-sdk/node_modules/io-ts").RefinementType<import("../../../../Shared/fitbit-sdk/node_modules/io-ts").NumberType, number, number, import("../../../../Shared/fitbit-sdk/node_modules/io-ts").mixed>, number, number, import("../../../../Shared/fitbit-sdk/node_modules/io-ts").mixed>;
}> & import("../../../../Shared/fitbit-sdk/node_modules/io-ts").TypeOfPartialProps<{
    generated: import("../../../../Shared/fitbit-sdk/node_modules/io-ts").BooleanType;
    name: import("../../../../Shared/fitbit-sdk/node_modules/io-ts").StringType;
}>;
export declare function sourceMapMessage(message: ConsoleMessage, sourceMaps: ComponentSourceMapConsumers): ConsoleMessage;
export declare function sourceMapMessage(message: ConsoleTrace, sourceMaps: ComponentSourceMapConsumers): ConsoleTrace;
